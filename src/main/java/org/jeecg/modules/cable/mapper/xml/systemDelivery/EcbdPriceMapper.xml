<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.jeecg.modules.cable.mapper.dao.systemDelivery.EcbdPriceMapper">

    <!--column-->
    <resultMap id="BaseResultMap" type="org.jeecg.modules.cable.entity.systemDelivery.EcbdPrice">
        <id column="ecbdp_id" jdbcType="INTEGER" property="ecbdpId"/>
        <result column="ecbd_id" jdbcType="INTEGER" property="ecbdId"/>
        <result column="start_type" jdbcType="BIT" property="startType"/>
        <result column="sort_id" jdbcType="INTEGER" property="sortId"/>
        <result column="ecp_id" jdbcType="INTEGER" property="ecpId"/>
        <result column="province_name" jdbcType="VARCHAR" property="provinceName"/>
        <result column="first_price" jdbcType="DECIMAL" property="firstPrice"/>
        <result column="price1" jdbcType="DECIMAL" property="price1"/>
        <result column="price2" jdbcType="DECIMAL" property="price2"/>
        <result column="price3" jdbcType="DECIMAL" property="price3"/>
        <result column="price4" jdbcType="DECIMAL" property="price4"/>
        <result column="price5" jdbcType="DECIMAL" property="price5"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        ecbdp_id
        , ecbd_id, start_type, sort_id, ecp_id, province_name, first_price, price1, price2, price3,
        price4, price5,create_time,update_time
    </sql>

    <!-- getList -->
    <select id="getList" parameterType="org.jeecg.modules.cable.entity.systemDelivery.EcbdPrice"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ecbd_price
        <where>
            <if test="startType!=null">
                and start_type=#{startType}
            </if>
            <if test="ecbdId!=null">
                and ecbd_id=#{ecbdId}
            </if>
            <if test="sortId != null">
                and <![CDATA[sort_id > #{sortId,jdbcType=INTEGER}]]>
            </if>
        </where>
    </select>

    <!--getCount-->
    <select id="getCount" parameterType="org.jeecg.modules.cable.entity.systemDelivery.EcbdPrice"
            resultType="java.lang.Long">
        select count(*) from ecbd_price
        <where>
            <if test="startType!=null">
                and start_type=#{startType}
            </if>
        </where>
    </select>

    <!-- getObject -->
    <select id="getObject" parameterType="org.jeecg.modules.cable.entity.systemDelivery.EcbdPrice"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ecbd_price
        <where>
            <if test="ecbdId != null">
                and ecbd_id = #{ecbdId,jdbcType=INTEGER}
            </if>
            <if test="ecbdpId != null">
                and ecbdp_id = #{ecbdpId,jdbcType=INTEGER}
            </if>
        </where>
        order by sort_id desc limit 1
    </select>


    <select id="getObjectPassProvinceName"
            resultType="org.jeecg.modules.cable.entity.systemDelivery.EcbdPrice">
        select
        <include refid="Base_Column_List"/>
        from ecbd_price
        <where>
            <if test="ecbdpId != null">
                and <![CDATA[ecbdp_id != #{ecbdpId,jdbcType=INTEGER}]]>
            </if>
            <if test="ecbdId != null">
                and ecbd_id = #{ecbdId,jdbcType=INTEGER}
            </if>
            <if test="provinceName != null">
                and province_name = #{provinceName,jdbcType=VARCHAR}
            </if>
        </where>

    </select>
    <select id="getLatestObject" resultType="org.jeecg.modules.cable.entity.systemDelivery.EcbdPrice">
        select
        <include refid="Base_Column_List"/>
        from ecbd_price
        <where>
            <if test="ecbdId != null">
                and ecbd_id = #{ecbdId,jdbcType=INTEGER}
            </if>
        </where>
        order by sort_id desc
        limit 1
    </select>

</mapper>


